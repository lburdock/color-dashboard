{"version":3,"sources":["webpack:///./src/pages/palette.js","webpack:///./src/page-content/palette/components/add-button.js","webpack:///./src/page-content/palette/components/share-button.js","webpack:///./src/page-content/palette/index.js","webpack:///./src/components/swatches/info-swatch-list.js"],"names":["IndexPage","title","AddButton","initColor","onAddColor","useModalState","closeModal","openModal","showModal","as","InvisibleButton","aria-label","size","onClick","aria-hidden","icon","shareData","className","disabled","text","copyData","ShareButton","timeout","props","href","useLocation","useState","button","setButton","useEffect","clearTimeout","cn","copy","format","setTimeout","key","StyledButton","ColorPalette","dispatch","useColorDispatch","colors","useColorState","palette","hasColors","length","newColor","addPaletteColor","map","color","index","onUpdate","updatePaletteColor","onDelete","deletePaletteColor","styled","InfoSwatchList","children","FlexGap","div"],"mappings":"2FAAA,wDAaeA,UATG,WAChB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,S,mLCsBSC,EAvBG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACFC,cAArCC,EADuC,EACvCA,WAAYC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,UAE/B,OACE,oCACE,kBAAC,IAAD,CACEC,GAAIC,IACJC,aAAW,qBACXC,KAAK,QACLC,QAASN,GAET,kBAAC,IAAD,CAAMO,cAAY,OAAOC,KAAK,wBAEhC,kBAAC,IAAD,CACET,WAAYA,EACZH,UAAWA,EACXC,WAAYA,EACZI,UAAWA,M,yDChBbQ,EAAY,CAChBC,UAAW,sBACXC,UAAU,EACVH,KAAM,eACNI,KAAM,SAEFC,EAAW,CACfH,UAAW,UACXC,UAAU,EACVH,KAAM,eACNI,KAAM,WAqCOE,EAlCK,SAAC,GAA6B,IAG5CC,EAHiBL,EAA0B,EAA1BA,UAAcM,EAAY,6BACvCC,EAASC,wBAATD,KADuC,EAEnBE,mBAASV,GAA9BW,EAFwC,KAEhCC,EAFgC,KAmB/C,OANAC,qBAAU,WACR,OAAO,WACLC,aAAaR,MAEd,CAACA,IAGF,0CACEL,UAAWc,YAAG,SAAUJ,EAAOV,UAAWA,GAC1CC,SAAUS,EAAOT,SACjBL,QAlBY,WACdmB,IAAKR,EAAM,CAAES,OAAQ,eACrBL,EAAUR,GACVE,EAAUY,YAAW,WACnBN,EAAUZ,KAvBF,OAsCJO,GAEJ,kBAAC,IAAD,CAAaY,IAAKR,EAAOZ,KAAMH,KAAK,SAClC,kBAAC,IAAD,CAAME,cAAY,OAAOC,KAAMY,EAAOZ,QAExC,8BAAOY,EAAOR,QCGdiB,GAFSC,IArCM,WACnB,IAAMC,EAAWC,cACAC,EAAWC,cAApBC,QACFC,IAAcH,EAAOI,OAE3B,OACE,kBAAC,IAAD,KACE,yBAAK3B,UAAU,0CACb,kBAAC,EAAD,CACEd,UAAWqC,aAAF,EAAEA,EAASA,EAAOI,OAAS,GACpCxC,WAAY,SAAAyC,GAAQ,OAAIP,EAASQ,YAAgB,CAAED,kBAGtDF,EACC,kBAACP,EAAD,cAEA,wBAAInB,UAAU,2EAAd,wCAIF,kBAAC,IAAD,KACG0B,GACCH,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,IAAD,CACEd,IAAQa,EAAL,IAAcC,EACjBD,MAAOA,EACPE,SAAU,SAAAL,GAAQ,OAChBP,EAASa,YAAmB,CAAEN,WAAUI,YAE1CG,SAAU,kBAAMd,EAASe,YAAmB,CAAEJ,oBAUvCK,YAAOjC,GAAV,4EAAGiC,CAAH,4D,oCCrDlB,uEAGaC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5B,kBAACC,EAAD,CAASxC,UAAU,6BAA6BuC,IAG5CC,EAAUH,IAAOI,IAAV,gFAAGJ,CAAH","file":"component---src-pages-palette-js-74412b700cfbe16954d0.js","sourcesContent":["import React from \"react\";\nimport Seo from \"../components/layout/seo\";\nimport Palette from \"../page-content/palette\";\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Seo title=\"Palette\" />\n      <Palette />\n    </>\n  );\n};\n\nexport default IndexPage;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { InvisibleButton } from \"../../../components/buttons\";\nimport { Icon, IconWrapper } from \"../../../components/icon\";\nimport ColorPickerModal from \"../../../components/modals/color-picker\";\nimport useModalState from \"../../../state/modal-hook\";\n\nconst AddButton = ({ initColor, onAddColor }) => {\n  const { closeModal, openModal, showModal } = useModalState();\n\n  return (\n    <>\n      <IconWrapper\n        as={InvisibleButton}\n        aria-label=\"Add a color swatch\"\n        size=\"large\"\n        onClick={openModal}\n      >\n        <Icon aria-hidden=\"true\" icon=\"fas fa-plus-circle\" />\n      </IconWrapper>\n      <ColorPickerModal\n        closeModal={closeModal}\n        initColor={initColor}\n        onAddColor={onAddColor}\n        showModal={showModal}\n      />\n    </>\n  );\n};\n\nexport default AddButton;\n\nAddButton.propTypes = {\n  initColor: PropTypes.string,\n  onAddColor: PropTypes.func.isRequired,\n};\n","import { useLocation } from \"@reach/router\";\nimport copy from \"copy-to-clipboard\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { Icon, IconWrapper } from \"../../../components/icon\";\nimport cn from \"../../../utils/cn\";\n\nconst delay = 2000;\nconst shareData = {\n  className: \"is-link is-outlined\",\n  disabled: false,\n  icon: \"fas fa-share\",\n  text: \"Share\",\n};\nconst copyData = {\n  className: \"is-dark\",\n  disabled: true,\n  icon: \"fas fa-check\",\n  text: \"Copied!\",\n};\n\nconst ShareButton = ({ className, ...props }) => {\n  const { href } = useLocation();\n  const [button, setButton] = useState(shareData);\n  let timeout;\n\n  const onClick = () => {\n    copy(href, { format: \"text/plain\" });\n    setButton(copyData);\n    timeout = setTimeout(() => {\n      setButton(shareData);\n    }, delay);\n  };\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [timeout]);\n\n  return (\n    <button\n      className={cn(\"button\", button.className, className)}\n      disabled={button.disabled}\n      onClick={onClick}\n      {...props}\n    >\n      <IconWrapper key={button.icon} size=\"small\">\n        <Icon aria-hidden=\"true\" icon={button.icon} />\n      </IconWrapper>\n      <span>{button.text}</span>\n    </button>\n  );\n};\n\nexport default ShareButton;\n\nShareButton.propTypes = {\n  className: PropTypes.string,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HeroSection } from \"../../components/layout/hero-section\";\nimport { InfoSwatchList } from \"../../components/swatches/info-swatch-list\";\nimport InfoSwatchWithPicker from \"../../components/swatches/info-with-color-picker\";\nimport { useColorDispatch, useColorState } from \"../../state/color-context\";\nimport {\n  addPaletteColor,\n  updatePaletteColor,\n  deletePaletteColor,\n} from \"../../state/color-context/actions\";\nimport AddButton from \"./components/add-button\";\nimport ShareButton from \"./components/share-button\";\n\nconst ColorPalette = () => {\n  const dispatch = useColorDispatch();\n  const { palette: colors } = useColorState();\n  const hasColors = !!colors.length;\n\n  return (\n    <HeroSection>\n      <div className=\"is-flex is-justify-content-center mb-5\">\n        <AddButton\n          initColor={colors?.[colors.length - 1]}\n          onAddColor={newColor => dispatch(addPaletteColor({ newColor }))}\n        />\n      </div>\n      {hasColors ? (\n        <StyledButton>Share</StyledButton>\n      ) : (\n        <h1 className=\"title is-size-4-desktop is-size-5-touch has-text-centered has-text-grey\">\n          Create and share your color palette.\n        </h1>\n      )}\n      <InfoSwatchList>\n        {hasColors &&\n          colors.map((color, index) => (\n            <InfoSwatchWithPicker\n              key={`${color}-${index}`}\n              color={color}\n              onUpdate={newColor =>\n                dispatch(updatePaletteColor({ newColor, index }))\n              }\n              onDelete={() => dispatch(deletePaletteColor({ index }))}\n            />\n          ))}\n      </InfoSwatchList>\n    </HeroSection>\n  );\n};\n\nexport default ColorPalette;\n\nconst StyledButton = styled(ShareButton)`\n  bottom: 0.5rem;\n  position: fixed;\n  right: 0.5rem;\n  z-index: 1;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const InfoSwatchList = ({ children }) => (\n  <FlexGap className=\"is-flex is-flex-wrap-wrap\">{children}</FlexGap>\n);\n\nconst FlexGap = styled.div`\n  gap: 1rem;\n`;\n"],"sourceRoot":""}