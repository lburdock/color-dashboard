{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/pages/palette/add-button.js","webpack:///./src/components/pages/palette/index.js"],"names":["IndexPage","title","AddButton","initColor","onAddColor","useModalState","closeModal","openModal","showModal","as","InvisibleButton","aria-label","size","onClick","aria-hidden","icon","StyledWrapper","ColorPalette","navigate","useNavigate","addRecentColor","useRecentColorsDispatch","useState","useSearchParameters","colors","setColors","handleColorUpdate","updatedColors","formatColorSearchParams","replace","deleteColor","index","deleteItemByIndex","updateColor","newColor","updateItemByIndex","length","map","color","className","key","onUpdate","onDelete","hex","styled","div"],"mappings":"2FAAA,wDAaeA,UATG,WAChB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,S,2MCsBSC,EAvBG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACFC,cAArCC,EADuC,EACvCA,WAAYC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,UAE/B,OACE,oCACE,kBAAC,IAAD,CACEC,GAAIC,IACJC,aAAW,qBACXC,KAAK,QACLC,QAASN,GAET,kBAAC,IAAD,CAAMO,cAAY,OAAOC,KAAK,wBAEhC,kBAAC,IAAD,CACET,WAAYA,EACZH,UAAWA,EACXC,WAAYA,EACZI,UAAWA,MCoCbQ,GAFSC,IAhDM,WACnB,IAAMC,EAAWC,wBACXC,EAAiBC,cAFE,EAGGC,mBAASC,eAA9BC,EAHkB,KAGVC,EAHU,KAKnBC,EAAoB,SAAAC,GACxBT,EAASU,YAAwBD,GAAgB,CAAEE,SAAS,IAC5DJ,EAAUE,IASNG,EAAc,SAAAC,GAAK,OAAI,WAC3B,IAAMJ,EAAgBK,YAAkBR,EAAQO,GAChDL,EAAkBC,KAGdM,EAAc,SAAAF,GAAK,OAAI,SAAAG,GAC3B,IAAMP,EAAgBQ,YAAkBX,EAAQO,EAAOG,GACvDR,EAAkBC,GAClBP,EAAec,KAGjB,OACE,kBAAClB,EAAD,KACGQ,EAAOY,OACJZ,EAAOa,KAAI,SAACC,EAAOP,GAAR,OACT,kBAAC,IAAD,CACEQ,UAAU,YACVC,IAAQF,EAAL,IAAcP,EACjB5B,UAAWmC,EACXG,SAAUR,EAAYF,GACtBW,SAAUZ,EAAYC,QAG1B,KACJ,kBAAC,EAAD,CACE5B,UAAWqB,EAAOA,EAAOY,OAAS,GAClChC,WAhCc,SAAAuC,GAClB,IAAMhB,EAAa,sBAAOH,GAAP,CAAemB,IAClCjB,EAAkBC,GAClBP,EAAeuB,QAqCGC,IAAOC,IAAV,yEAAGD,CAAH","file":"component---src-pages-index-js-19459e26a9a9639fce5d.js","sourcesContent":["import React from \"react\";\nimport Seo from \"../components/layout/seo\";\nimport Palette from \"../components/pages/palette\";\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Seo title=\"Palette\" />\n      <Palette />\n    </>\n  );\n};\n\nexport default IndexPage;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport useModalState from \"../../../state/modal-hook\";\nimport { InvisibleButton } from \"../../buttons/invisible\";\nimport { Icon, IconWrapper } from \"../../icon\";\nimport ColorPickerModal from \"../../modals/color-picker\";\n\nconst AddButton = ({ initColor, onAddColor }) => {\n  const { closeModal, openModal, showModal } = useModalState();\n\n  return (\n    <>\n      <IconWrapper\n        as={InvisibleButton}\n        aria-label=\"Add a color swatch\"\n        size=\"large\"\n        onClick={openModal}\n      >\n        <Icon aria-hidden=\"true\" icon=\"fas fa-plus-circle\" />\n      </IconWrapper>\n      <ColorPickerModal\n        closeModal={closeModal}\n        initColor={initColor}\n        onAddColor={onAddColor}\n        showModal={showModal}\n      />\n    </>\n  );\n};\n\nexport default AddButton;\n\nAddButton.propTypes = {\n  initColor: PropTypes.string,\n  onAddColor: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"@reach/router\";\nimport styled from \"styled-components\";\nimport { useRecentColorsDispatch } from \"../../../state/recent-colors-context\";\nimport useSearchParameters from \"../../../state/search-parameters-hook\";\nimport { deleteItemByIndex, updateItemByIndex } from \"../../../utils/array\";\nimport { formatColorSearchParams } from \"../../../utils/routing\";\nimport InfoSwatchWithPicker from \"../../swatches/info-with-color-picker\";\nimport AddButton from \"./add-button\";\n\nconst ColorPalette = () => {\n  const navigate = useNavigate();\n  const addRecentColor = useRecentColorsDispatch();\n  const [colors, setColors] = useState(useSearchParameters());\n\n  const handleColorUpdate = updatedColors => {\n    navigate(formatColorSearchParams(updatedColors), { replace: true });\n    setColors(updatedColors);\n  };\n\n  const addNewColor = hex => {\n    const updatedColors = [...colors, hex];\n    handleColorUpdate(updatedColors);\n    addRecentColor(hex);\n  };\n\n  const deleteColor = index => () => {\n    const updatedColors = deleteItemByIndex(colors, index);\n    handleColorUpdate(updatedColors);\n  };\n\n  const updateColor = index => newColor => {\n    const updatedColors = updateItemByIndex(colors, index, newColor);\n    handleColorUpdate(updatedColors);\n    addRecentColor(newColor);\n  };\n\n  return (\n    <StyledWrapper>\n      {colors.length\n        ? colors.map((color, index) => (\n            <InfoSwatchWithPicker\n              className=\"mr-3 mb-3\"\n              key={`${color}-${index}`}\n              initColor={color}\n              onUpdate={updateColor(index)}\n              onDelete={deleteColor(index)}\n            />\n          ))\n        : null}\n      <AddButton\n        initColor={colors[colors.length - 1]}\n        onAddColor={addNewColor}\n      />\n    </StyledWrapper>\n  );\n};\n\nexport default ColorPalette;\n\nconst StyledWrapper = styled.div`\n  align-items: center;\n  box-sizing: border-box; \n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding 2rem 0;\n`;\n"],"sourceRoot":""}