{"version":3,"sources":["webpack:///./src/page-content/shade-generator/components/random-button.js","webpack:///./src/utils/color/get-random-hex.js","webpack:///./src/page-content/shade-generator/components/select.js","webpack:///./src/page-content/shade-generator/index.js","webpack:///./src/pages/shade-generator.js","webpack:///./src/components/swatches/info-swatch-list.js"],"names":["RandomButton","onClick","className","Array","from","length","Math","floor","random","join","toLowerCase","size","aria-hidden","icon","Select","onChange","props","htmlFor","id","event","target","value","lightnessStep","1","_","i","2","5","ShadeGenerator","useColorState","palette","color","shade","FALLBACK_COLOR","dispatch","useColorDispatch","useState","step","setStep","updateColor","newColor","skipPaletteUpdate","updateShadeColor","key","onUpdate","map","lightness","colorString","setLightness","IndexPage","title","InfoSwatchList","children","FlexGap","styled","div"],"mappings":"uOAmBeA,EAdM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,4BACEC,UAAU,2CACVD,QAAS,kBAAMA,ECFZ,IAJYE,MAAMC,KACvB,CAAEC,OAAQ,IACV,iBALa,mBAKEC,KAAKC,MAAsB,GAAhBD,KAAKE,cAETC,KAAK,IAAIC,eDEU,KAEvC,kBAAC,IAAD,CAAaC,KAAK,SAChB,kBAAC,IAAD,CAAMC,cAAY,OAAOC,KAAK,iBAEhC,gD,YEiBSC,EA5BA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAKzC,OACE,yBAAKd,UAAU,eACb,2BAAOA,UAAU,2BAA2Be,QAAQ,eAApD,gBAGA,yBAAKf,UAAU,WACb,yBAAKA,UAAU,UAEb,0CAAQgB,GAAG,cAAcH,SAZZ,SAAAI,GACnBJ,EAASI,EAAMC,OAAOC,SAWqCL,GACnD,4BAAQK,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,WCHNC,EAAgB,CACpBC,EAAGpB,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACmB,EAAGC,GAAJ,MAAoB,KAATA,EAAI,MAC7CC,EAAGvB,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACmB,EAAGC,GAAJ,MAAoB,KAATA,EAAI,MAC7CE,EAAGxB,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACmB,EAAGC,GAAJ,MAAoB,KAATA,EAAI,OA4ChCG,EAzCQ,WAAO,IAAD,EACAC,cAAnBC,EADmB,EACnBA,QACFC,EAFqB,EACVC,MACG,IAAMF,EAAQ,IAAMG,IAClCC,EAAWC,cAHU,EAIHC,mBAAS,KAA1BC,EAJoB,KAIdC,EAJc,KAMrBC,EAAc,SAACC,EAAUC,GAC7BP,EAASQ,YAAiB,CAAEF,WAAUC,wBAGxC,OACE,oCACE,kBAAC,IAAD,KACE,wBAAIvC,UAAU,mBAAd,mBACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,YACVyC,IAAKZ,EACLA,MAAOA,EACPa,SAAUL,IAEZ,6BACE,kBAAC,EAAD,CAAQxB,SAAUuB,EAASjB,MAAOgB,IAClC,kBAAC,EAAD,CAAcpC,QAASsC,OAI7B,kBAAC,IAAD,CAAarC,UAAU,wBACrB,kBAAC,IAAD,KACGoB,EAAce,GAAMQ,KAAI,SAAAC,GAAS,OAChC,kBAAC,IAAD,CACEH,IAAKG,EACLC,YAAaC,YAAaF,EAAWf,YCxCpCkB,UATG,WAChB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,oBACX,kBAAC,EAAD,S,oCCRN,uEAGaC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5B,kBAACC,EAAD,CAASnD,UAAU,6BAA6BkD,IAG5CC,EAAUC,IAAOC,IAAV,gFAAGD,CAAH","file":"component---src-pages-shade-generator-js-44326a02d4b9e2a71aa1.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Icon, IconWrapper } from \"../../../components/icon\";\nimport { getRandomHex } from \"../../../utils/color/get-random-hex\";\n\nconst RandomButton = ({ onClick }) => {\n  return (\n    <button\n      className=\"button is-link is-outlined is-small mt-2\"\n      onClick={() => onClick(getRandomHex(), true)}\n    >\n      <IconWrapper size=\"small\">\n        <Icon aria-hidden=\"true\" icon=\"fas fa-redo\" />\n      </IconWrapper>\n      <span>Random color</span>\n    </button>\n  );\n};\n\nexport default RandomButton;\n\nRandomButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","const hexChars = \"0123456789ABCDEF\";\n\nexport const getRandomHex = () => {\n  const colorArray = Array.from(\n    { length: 6 },\n    () => hexChars[Math.floor(Math.random() * 16)]\n  );\n  return \"#\" + colorArray.join(\"\").toLowerCase();\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Select = ({ onChange, ...props }) => {\n  const handleChange = event => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"field is-gr\">\n      <label className=\"has-text-weight-semibold\" htmlFor=\"shadingStep\">\n        Shading step\n      </label>\n      <div className=\"control\">\n        <div className=\"select\">\n          {/* eslint-disable-next-line */}\n          <select id=\"shadingStep\" onChange={handleChange} {...props}>\n            <option value=\"5\">5%</option>\n            <option value=\"1\">1%</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Select;\n","import React, { useState } from \"react\";\nimport { setLightness } from \"polished\";\nimport { HeroSection } from \"../../components/layout/hero-section\";\nimport InfoSwatch from \"../../components/swatches/info\";\nimport { InfoSwatchList } from \"../../components/swatches/info-swatch-list\";\nimport InfoSwatchWithPicker from \"../../components/swatches/info-with-color-picker\";\nimport {\n  useColorDispatch,\n  useColorState,\n  FALLBACK_COLOR,\n} from \"../../state/color-context\";\nimport { updateShadeColor } from \"../../state/color-context/actions\";\nimport RandomButton from \"./components/random-button\";\nimport Select from \"./components/select\";\n\nconst lightnessStep = {\n  1: Array.from({ length: 99 }, (_, i) => (i + 1) * 0.01),\n  2: Array.from({ length: 49 }, (_, i) => (i + 1) * 0.02),\n  5: Array.from({ length: 19 }, (_, i) => (i + 1) * 0.05),\n};\n\nconst ShadeGenerator = () => {\n  const { palette, shade } = useColorState();\n  const color = shade[0] || palette[0] || FALLBACK_COLOR;\n  const dispatch = useColorDispatch();\n  const [step, setStep] = useState(\"5\");\n\n  const updateColor = (newColor, skipPaletteUpdate) => {\n    dispatch(updateShadeColor({ newColor, skipPaletteUpdate }));\n  };\n\n  return (\n    <>\n      <HeroSection>\n        <h1 className=\"title is-4 mr-3\">Shade generator</h1>\n        <div className=\"is-flex\">\n          <InfoSwatchWithPicker\n            className=\"mr-3 mb-3\"\n            key={color}\n            color={color}\n            onUpdate={updateColor}\n          />\n          <div>\n            <Select onChange={setStep} value={step} />\n            <RandomButton onClick={updateColor} />\n          </div>\n        </div>\n      </HeroSection>\n      <HeroSection className=\"has-background-white\">\n        <InfoSwatchList>\n          {lightnessStep[step].map(lightness => (\n            <InfoSwatch\n              key={lightness}\n              colorString={setLightness(lightness, color)}\n            />\n          ))}\n        </InfoSwatchList>\n      </HeroSection>\n    </>\n  );\n};\n\nexport default ShadeGenerator;\n","import React from \"react\";\nimport Seo from \"../components/layout/seo\";\nimport ShadeGenerator from \"../page-content/shade-generator\";\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Seo title=\"Shade generator\" />\n      <ShadeGenerator />\n    </>\n  );\n};\n\nexport default IndexPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const InfoSwatchList = ({ children }) => (\n  <FlexGap className=\"is-flex is-flex-wrap-wrap\">{children}</FlexGap>\n);\n\nconst FlexGap = styled.div`\n  gap: 1rem;\n`;\n"],"sourceRoot":""}